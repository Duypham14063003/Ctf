{"version":3,"sources":["../../../../../../packages/vite/src/executors/preview-server/preview-server.impl.ts"],"sourcesContent":["import { ExecutorContext, parseTargetString, runExecutor } from '@nrwl/devkit';\nimport { InlineConfig, mergeConfig, preview, PreviewServer } from 'vite';\nimport {\n  getNxTargetOptions,\n  getViteSharedConfig,\n  getViteBuildOptions,\n  getVitePreviewOptions,\n} from '../../utils/options-utils';\nimport { ViteBuildExecutorOptions } from '../build/schema';\nimport { VitePreviewServerExecutorOptions } from './schema';\n\nexport default async function* vitePreviewServerExecutor(\n  options: VitePreviewServerExecutorOptions,\n  context: ExecutorContext\n) {\n  // Retrieve the option for the configured buildTarget.\n  const buildTargetOptions: ViteBuildExecutorOptions = getNxTargetOptions(\n    options.buildTarget,\n    context\n  );\n\n  // Merge the options from the build and preview-serve targets.\n  // The latter takes precedence.\n  const mergedOptions = {\n    ...{ watch: {} },\n    ...buildTargetOptions,\n    ...options,\n  };\n\n  // Retrieve the server configuration.\n  const serverConfig: InlineConfig = mergeConfig(\n    getViteSharedConfig(mergedOptions, options.clearScreen, context),\n    {\n      build: getViteBuildOptions(mergedOptions, context),\n      preview: getVitePreviewOptions(mergedOptions, context),\n    }\n  );\n\n  if (serverConfig.mode === 'production') {\n    console.warn('WARNING: preview is not meant to be run in production!');\n  }\n\n  let server: PreviewServer | undefined;\n\n  const processOnExit = async () => {\n    await closeServer(server);\n    process.off('SIGINT', processOnExit);\n    process.off('SIGTERM', processOnExit);\n    process.off('exit', processOnExit);\n  };\n\n  process.on('SIGINT', processOnExit);\n  process.on('SIGTERM', processOnExit);\n  process.on('exit', processOnExit);\n\n  // Launch the build target.\n  const target = parseTargetString(options.buildTarget, context.projectGraph);\n  const build = await runExecutor(target, mergedOptions, context);\n\n  for await (const result of build) {\n    if (result.success) {\n      try {\n        if (!server) {\n          server = await preview(serverConfig);\n        }\n        server.printUrls();\n\n        const resolvedUrls = [\n          ...server.resolvedUrls.local,\n          ...server.resolvedUrls.network,\n        ];\n\n        yield {\n          success: true,\n          baseUrl: resolvedUrls[0] ?? '',\n        };\n      } catch (e) {\n        console.error(e);\n        yield {\n          success: false,\n          baseUrl: '',\n        };\n      }\n    } else {\n      yield {\n        success: false,\n        baseUrl: '',\n      };\n    }\n  }\n\n  await new Promise(() => {});\n}\n\nfunction closeServer(server?: PreviewServer): Promise<void> {\n  return new Promise((resolve) => {\n    if (!server) {\n      resolve();\n    } else {\n      const { httpServer } = server;\n      // closeAllConnections was added in Node v18.2.0\n      httpServer.closeAllConnections && httpServer.closeAllConnections();\n      httpServer.close(() => resolve());\n    }\n  });\n}\n"],"names":["vitePreviewServerExecutor","options","context","buildTargetOptions","getNxTargetOptions","buildTarget","mergedOptions","watch","serverConfig","mergeConfig","getViteSharedConfig","clearScreen","build","getViteBuildOptions","preview","getVitePreviewOptions","mode","console","warn","server","processOnExit","closeServer","process","off","on","target","parseTargetString","projectGraph","runExecutor","result","success","printUrls","resolvedUrls","local","network","baseUrl","e","error","Promise","resolve","httpServer","closeAllConnections","close"],"mappings":"AAAA;+BAWA;;aAA+BA;;;wBAXiC;sBACE;8BAM3D;AAIQ,gBAAgBA,0BAC7BC,OAAyC,EACzCC,OAAwB,EACxB;IACA,sDAAsD;IACtD,MAAMC,qBAA+CC,IAAAA,gCAAkB,EACrEH,QAAQI,WAAW,EACnBH;IAGF,8DAA8D;IAC9D,+BAA+B;IAC/B,MAAMI,gBAAgB,aACjB;QAAEC,OAAO,CAAC;IAAE,GACZJ,oBACAF;IAGL,qCAAqC;IACrC,MAAMO,eAA6BC,IAAAA,iBAAW,EAC5CC,IAAAA,iCAAmB,EAACJ,eAAeL,QAAQU,WAAW,EAAET,UACxD;QACEU,OAAOC,IAAAA,iCAAmB,EAACP,eAAeJ;QAC1CY,SAASC,IAAAA,mCAAqB,EAACT,eAAeJ;IAChD;IAGF,IAAIM,aAAaQ,IAAI,KAAK,cAAc;QACtCC,QAAQC,IAAI,CAAC;IACf,CAAC;IAED,IAAIC;IAEJ,MAAMC,gBAAgB,UAAY;QAChC,MAAMC,YAAYF;QAClBG,QAAQC,GAAG,CAAC,UAAUH;QACtBE,QAAQC,GAAG,CAAC,WAAWH;QACvBE,QAAQC,GAAG,CAAC,QAAQH;IACtB;IAEAE,QAAQE,EAAE,CAAC,UAAUJ;IACrBE,QAAQE,EAAE,CAAC,WAAWJ;IACtBE,QAAQE,EAAE,CAAC,QAAQJ;IAEnB,2BAA2B;IAC3B,MAAMK,SAASC,IAAAA,yBAAiB,EAACzB,QAAQI,WAAW,EAAEH,QAAQyB,YAAY;IAC1E,MAAMf,QAAQ,MAAMgB,IAAAA,mBAAW,EAACH,QAAQnB,eAAeJ;IAEvD,WAAW,MAAM2B,UAAUjB,MAAO;QAChC,IAAIiB,OAAOC,OAAO,EAAE;YAClB,IAAI;gBACF,IAAI,CAACX,QAAQ;oBACXA,SAAS,MAAML,IAAAA,aAAO,EAACN;gBACzB,CAAC;gBACDW,OAAOY,SAAS;gBAEhB,MAAMC,eAAe;uBAChBb,OAAOa,YAAY,CAACC,KAAK;uBACzBd,OAAOa,YAAY,CAACE,OAAO;iBAC/B;oBAIUF;gBAFX,MAAM;oBACJF,SAAS,IAAI;oBACbK,SAASH,CAAAA,MAAAA,YAAY,CAAC,EAAE,YAAfA,MAAmB,EAAE;gBAChC;YACF,EAAE,OAAOI,GAAG;gBACVnB,QAAQoB,KAAK,CAACD;gBACd,MAAM;oBACJN,SAAS,KAAK;oBACdK,SAAS;gBACX;YACF;QACF,OAAO;YACL,MAAM;gBACJL,SAAS,KAAK;gBACdK,SAAS;YACX;QACF,CAAC;IACH;IAEA,MAAM,IAAIG,QAAQ,IAAM,CAAC;AAC3B;AAEA,SAASjB,YAAYF,MAAsB,EAAiB;IAC1D,OAAO,IAAImB,QAAQ,CAACC,UAAY;QAC9B,IAAI,CAACpB,QAAQ;YACXoB;QACF,OAAO;YACL,MAAM,EAAEC,WAAU,EAAE,GAAGrB;YACvB,gDAAgD;YAChDqB,WAAWC,mBAAmB,IAAID,WAAWC,mBAAmB;YAChED,WAAWE,KAAK,CAAC,IAAMH;QACzB,CAAC;IACH;AACF"}